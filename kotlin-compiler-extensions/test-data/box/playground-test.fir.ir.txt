FILE fqName:foo.bar fileName:/playground-test.kt
  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.String
    BLOCK_BODY
      VAR name:hello type:kotlin.String [val]
        CALL 'public final fun greetings (): kotlin.String declared in foo.bar' type=kotlin.String origin=null
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in foo.bar'
        WHEN type=kotlin.String origin=IF
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
              arg0: GET_VAR 'val hello: kotlin.String [val] declared in foo.bar.box' type=kotlin.String origin=null
              arg1: CONST String type=kotlin.String value="hi"
            then: CONST String type=kotlin.String value="OK"
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CONST String type=kotlin.String value="Fail"
  FUN name:greetings visibility:public modality:FINAL <> () returnType:kotlin.String
    BLOCK_BODY
      RETURN type=kotlin.String from='public final fun greetings (): kotlin.String declared in foo.bar'
        CONST String type=kotlin.String value="hi"
FILE fqName:foo.bar.some.additional.files fileName:/SomeFile.kt
